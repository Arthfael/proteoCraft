% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GO_map.R
\name{GO_map}
\alias{GO_map}
\title{GO_map}
\usage{
GO_map(
  DB,
  db_ID_col = "Protein ID",
  db_Gene_col = "Gene",
  GO.terms,
  method = "topGO",
  cl,
  N.clust,
  N.reserved = 1
)
}
\arguments{
\item{DB}{The formated protein database, with protein IDs and GO terms.}

\item{db_ID_col}{Name of the column of Protein IDs (one per row) in the database. Default = "Protein ID"}

\item{db_Gene_col}{Name of the column of Gene IDs/names in the database. Default = "Gene".}

\item{GO.terms}{Optional. GO.terms data frame as created by the GO_enrich function.}

\item{method}{One of "topGO" (default) or "DIY". See description.}

\item{cl}{Already have a cluster handy? Why spend time making a new one, which on top of that may invalidate the old one. Just pass it along!}

\item{N.clust}{A limit on the number of vCPUs to use. If left as NULL (default), uses the number of available clusters - 1, to a minimum of 1.}

\item{N.reserved}{Default = 1. Number of reserved vCPUs the function is not to use. Note that for obvious reasons it will always use at least one.}
}
\value{
A named list of the following objects
\itemize{
  \item Mappings A list of up to 2 data frames, "Protein" and optionally "Gene" (if db_Gene_col is a valid column name for DB). Each data frame maps the single GO terms per row in column "GO" to any number of semicolon-separated proteins (resp. genes) in column "Protein" (resp. "Gene").
  \item GO.terms - the optional GO.terms data frame if provided as input, with additional "Proteins" and (if db_Gene_col is a valid column name for DB) "Genes" columns.
}
}
\description{
A function to map GO terms to proteins and genes.
Its main purpose is to make GO_enrich faster.

The functions's code actually contains 2 alternative method to get the same thing done.
The 1st, the one actually used by default, is topGO-based. It is slightly faster and used for consistency -
since this function's output is later fed to other topGO functions.
The 2nd is more DIY (hence the name) and seems to return slightly more mappings (those of which I checked did make sense.)
}
