% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Prot.Ruler.R
\name{Prot.Ruler}
\alias{Prot.Ruler}
\title{Prot.Ruler}
\usage{
Prot.Ruler(
  Prot,
  DB,
  Expr.roots = c("Top3 log10(Intensity) ", "Mean Top3 log10(Intensity) "),
  Proteins.col = "Protein IDs",
  NuclL = 196,
  log.Expr = 10,
  norm = TRUE,
  norm_filter = TRUE,
  MaxOrg = 3,
  getLatest = FALSE
)
}
\arguments{
\item{Prot}{# The Protein Groups table.}

\item{DB}{# The processed Fasta proteome database.}

\item{Expr.roots}{# The roots of the expression columns which should be processed. Default = c("Top3.log10.Intensity.", "Mean.Top3.log10.Intensity.")}

\item{Proteins.col}{Default = "Protein.IDs"}

\item{NuclL}{Nucleosome length + estimate of linker region length; default = 196 (146 + 50)}

\item{log.Expr}{Set to 0 or FALSE if input expression values are linear scale. If the data is already log scale, set to the relevant scale's base. Default = 10}

\item{norm}{Are expression columns normalised? If TRUE (default), then we will use as estimates the data for histones averaged over all columns. If FALSE, each expression column will be treated independently.}

\item{norm_filter}{If TRUE (default), and all core histones are missing from a sample, then that sample will be excluded from the results.}

\item{MaxOrg}{Sometimes, because of contaminants, there are a lot of organisms in an experiment. This is the maximum number (default = 3) of organisms that the function will try to calculate a value for. If there are more, it will prompt the user for which to include.}

\item{getLatest}{If TRUE, will attempt to get genome sizes from the latest version of the online file at "ftp://ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/overview.txt"; if FALSE (default), will use the version re-distributed with the package.}
}
\description{
In house implementation of the Proteomic ruler (https://www.mcponline.org/content/13/12/3497.long), with minor modifications.
Values output are estimates of copy number per cell.
}
\examples{
PG <- Prot.Ruler(PG, db)

}
