Changelog
#########

Vers. 2.1.1
 - Improved resilience of qs2-based fast load/save functions to objects containing connections. Move the from sources to /R.

Vers. 2.1.0
 - Fixed a bug which caused Carbamidomethyl peptides to be excluded when quantifying proteins.

Vers. 1.1.0
 - Complete re-writing of the peptide intensities normalisation code, to allow for complete control over the normalisation sequence.

Vers. 1.0.1
 - Statistics: SAM support improved, Student's classic t-test added (we were always using Welch's), added SAM-based curved thresholds optionally for Student's t-test.
 - Moved modified peptides to sources.
 - Added GSEA all analysis scripts.
 - New script for Thermo raw file trace extraction.

Vers. 1.0.0

!!! 04/04/2025 -> transitioned from internal aRmel package to external proteoCraft

Vers. 6.4.0.0
 - Big update to rewrite a lot of code which was broken in 2023 by the transition from shiny 1.7.5 to 1.8.0; now this is not restricted to 1.75 or lower anymore; this should work now but the number of changes means this version should be carefully tested. As part of this fix, scaling of tables displayed in shiny was improved, and fill-down bugs affecting the Use column or NA values were fixed.
 - Fixed potential issue where several sources of GO terms were used and the same ID has different names.
 - A few openxlsx2-related bug were fixed, allowing transition to v1.14.
 - FP_to_MQ() was modified to allow handling of cases where FragPipe - God knows why - wrote some rows with missing values for some right-most columns. This happened at least once with an Open search.
 - Fixed the broken intensity color scale in cov3D().
 - Improved robustness of ClueGO_enrich.R source.
 - Fixed a bug in the replicates workflow which caused the "+" in GO term columns to be in the wrong cells.
 - Fixed bugs/timeout issues arising from imperfect implementation of the new ClueGO_enrich.R source, which was only correct for protein-group filters, not dataset or peptide filters, and was not properly applying some parameters. It should also be better at handling new organisms now, allowing for a pause until they are downloaded in the Cytoscape GUI.
 - Fixed a few issues with the GO_enrich.R source, added better plot labels, filtering to automatically remove contaminants from the analysis.
 - Improved renv snapshot (speed).
 - Fixed issues in the implementation of rarely used statistical tests (ODP and LRT).
 - Complete rewrite of the STRINGdb code, to allow parallelisation (net increase in speed), increased robustness (switched from using rbioapi, which was broken, to direct REST API calls). Known issue: some .svg output images are written even though they are empty.

Vers. 6.3.1.8
 - Fixed the minor issue in Volcano.plot which caused the Y axis of protein-of-interest plots to not begin at 0.
 - Improved the default scaling of ClueGO svg graphics.
 - Fixed bug in DiaNN_to_MQ() - recently introduced when I added support for parquet files - which would cause the function to fail if both the .parquet and the .tsv report were present.

Vers. 6.3.1.7
 - CytoScape-based ClueGO analysis added to all 3 pipelines.
 - Overhaul of the post-F-test part to use limma::decideTests() instead of just applying FDR thresholds directly. This is equivalent to implementing post-hoc tests (full ANOVA), something I have needed to do for a long time.
 - As part of the above, the Volcano.plot() function was overhauled: less code nesting for easier code reading/debugging/editing, new reg.root argument to allow it to take "Regulated - ..." columns (which it previously created itself) created by limma in the F-test part. The FC thresholding was also slightly changed/simplified.
 - Fixed issues with PCA plot color scales which were shown as continuous for discrete factors. See .https://github.com/plotly/plotly.R/issues/2432#issuecomment-2741050746 for why I am an idiot.

Vers. 6.3.1.6
 - Small bug fixes.
 - XICs plots for proteins of interest with DiaNN if the XICs option was on. Could easily be extended to MaxQuant using msms.txt or msmsScans.txt... Should also be extended to be done for all regulated proteins/peptides to allow users to manually inspect raw data.
 - Added a missing if (...) {} switch in run_F_test.R source which shouldve been added when the new make_RefRat() function was implemented). Its absence caused the analysis to fail when using a fixed FC threshold.
 - Improved the Venn diagrams. These also now cover ptm-modified peptides, not just protein groups. This should be extended to the ptm-mods script.

Vers. 6.3.1.5
 - Changes to DIANN_to_MQ to allow support for quantUMS output as well as .parquet reports.
 - The code to apply MS2-based MS1 correction for DiaNN data when the MS1 area was used as Intensity (doesn't apply QuantUMS is on).
 - Usual stability fixes to scripts, new sources, etc...
 - Minor bug change to MatMet_LCMS().

Vers. 6.3.1.4
 - The way renv is used has been rethought as it wasn't working in the previous version.
 - New make_RefRat() function to consolidate duplicated (quadruplicated in fact) code. I also did a review of how reference ratios are created and improved how this is done for F tests.
 - Slight changes to the main workflow to distinguish between evidences (MaxQuant) and PSMs (other software): evidences are PSMs in most but not all cases.
 - Re-activated MS2-correction of MS1 data for DIA by default, but note that the algorithm is likely to change in the future.
 - New small sources protList2.R, Targets.R and protHeaders_for_shiny.R for smoother handling of proteins of interest.
 - Improved color scales for PCA plots.
 - Fixed issue with reading DIA windows for Thermo raw files.

Vers. 6.3.1.3
 - Started rolling out support for renv so that an environment can be easily re-created. Not there yet!
 - Added seeds to hopefully avoid issues with irreproducible imputations.
 - Moved over from qs to qs2 and moved corresponding fast save/load functions to a new source.
 - Updated the Q-values part - though the volcano plot was still not looked into (anyway, one should not use Q-values but un-transformed P-values, so it should probably just go).
 - Fixed a bug affecting protein groups level re-normalization. Although it was a pretty bad miscalculation, it actually in practice would barely have affected results because it was a re-normalisation of well normalised stuff and did not add an actual large value.
 - When re-normalising to a single protein group, a very small random value is added everywhere to avoid a row with singular values (which would break some downstream stats).
 - Fixed MaxQuant-specific parts of MQ.summary + improved speed.
 - Now Clone_Invoice_Cleanup.R will throw an error if long paths are not activated and a path length would exceed the maximum allowed length.
 - Improved LCMS_WetLab.
 - New cov3D function which can map modified peptides over a 3D PDB-like sequence.
 - Improvements to histones script.

Vers. 6.3.1.2
 - New statistical tests added: ODP and LRT (from edge) and DEqMS (limma extension); these are not fully integrated yet but the stats are calculated. TO DO: allow choosing these stats as the main volcano plot one, which will require re-writing the P-value choice App; also add PolySTest.

Vers. 6.3.1.1
 - The previous versions could not deal with co-IPs where Target contains a "-" (hyphen). This is fixed now.
 - New shared GO_prepare.R source for creating the GO_terms and GO_mappings objects.
 - I may have fixed the bug which caused the Process_Fasta_DBs.R source to fail in the past the first time it was run. 

Vers. 6.3.1.0
 - Retiring GO_enrich as a function, it is now replaced with a Source (with the same name)... and I say good riddance!
 - Improved/fixed the SAINTexpress part, with much better volcano plots + a new specific tab added to the reports. SAINTexpress filters were also created and are now fed into the GO enrichment, STRINGdb and CytoScape parts of the script.
 - Added user-defined Sample_solvents.txt usable by MatMet_WetLab().
 - I think I finally fixed the bug which was causing the replicates workflow to fail when run a first time and creating the plot of contamination levels (the target directory did not exist yet).
 - Fixed a bug in listMelt which luckily should be quite rare but can cause empty input list elements to cause incorrect stacking!
 - Minor adjusments to many sources, esp. for MQ inputs and the co-IP workflow with replicates.
 - The Format.DB_txt() function was updated to optionally allow extraction of Features ("FT" rows in the file) - this is slow so off by default. Its vectorization was also improved.

Vers. 6.3.0.1
 - The F_test function will be retired. I have finished reviewing the limma statistics and corrected some issues (e.g. improper use of duplicateCorrelation()). The F_test function is now replaced with the faster and simpler - and better - run_F_test.R source.
 - Minor changes to the Volcano.plot() function.
 - Improvements to the data replicates analysis script, notably integration with the new run_F_test.R source and fixes to the heatmap with clusters.
 - Note: there may be an issue with normalisations. But also, maybe not. The issue seems to be introduced at the "classic median normalisation" step for peptides - which is the easiest. It may just be a real feature of the one dataset where I have analysed so far. Keep an eye on it...
 - New function to quickly reload context (input/output/temporary directories and dataset name) to quickly restart an analysis.
 - New analysis script for analysis of peptides only, with replicates.

Vers. 6.3.0.0
 - Rewritten the Av_and_Stat_tests.R source, especially the moderated t-tests part (was doing it on variance from relevant samples only as opposed to pooling from all samples as recommended).

Vers. 6.2.0.1
 - Fixed some issues with consistency of column namings from different search software. This involved changes to the No-replicates script, the load PSMs source, as well as to FP_to_MQ.
 - Added periodic re-creation from scratch of parallel clusters to avoid unexplained abnormal memory usage inflation issues.
 - Improved automated library detection in DiaNN.

Vers. 6.2.0.0
 - A new core source for writing Excel was created; this uses a trick to speed up massively building the workbook object; writing the table is still slow though.
 - New ShinyOpt_Styles_and_Report source added to continue integration of both main analysis scripts.
 - Fixed a small issue which caused the taxonomy levels in the Taxonomy column of protein groups with multiple protein IDs to become sorted alphabetically rather than hierarchically.
 - Now for modified peptides analysis sample group-specific peptides are also marked as such (in a similar but not exactly identical way as for protein groups) in the Regulated column, for both t- and F-tests.
 - Small bug fixes to Target/Bait part of main workflow.
 - Fixed MatMet_WetLab issue that would skip if reloading existing text even if it was just a TEMPLATE.
 - Small change to GO (bugfix: had parClust, should've been cl) which may explain why it was so slow...

Vers. 6.1.0.4
 - Fixed the issue that all intensities became Inf in modified peptides analysis,

Vers. 6.1.0.3
 - Fixed small bug in F_test introduced last time, which causes it to not work.
 - Fixed normalization issue for PTMs when NA replacement method = median.
 - Improved how images are displayed in Shiny app for selection of T-test P-value type.
 - Fixed - at last - the ellusive table width issue in the Fasta databases processing Shiny app.

Vers. 6.1.0.2
 - Changes to how colours are handled by basic.heatmap.
 - .DIANN_to_MQ_server1 and 2 rewritten to use gtools::defmacro to avoid repeating code.

Vers. 6.1.0.1
 - Improved code for moderated t-tests.
 - Improved handling of PTMs in FP_to_MQ.
 - Parallelized saving plots in Volcano.plot. Next would be doing the same to the GO_enrich function.
 - Further bug fixes to t-tests... should be good now, even if one-tailed.
 - Slightly improved SAINTexpress integration. This needs a finishing touch.
 - New source for saving Volcano.plot thresholds to an Excel file.

Vers. 6.1.0.0
 - Bug fix to t.tests, which were off in recent versions (blocking not working + applied in some cases on all-duplicated samples).
 - Improved normalisations (a lot)!

Vers. 6.0.0.1
 - Updated Volcano.plot so it outputs tables of threshold values. These are combined and saved as an Excel table by the replicate script or F_test, as relevant.
 - Updated save path and subfolder code in Volcano.plot and F_test.

Vers. 6.0.0.0
 - All functions were rewritten to avoid using library or require, instead relying as much as practical on package::...
 - A new "Heat" plotting mode was added to Coverage.
 - A new PSMs-level PCA was added to the replicates script.
 - Significant update to DIANN_to_MQ to allow better detection/processing of the library to get peptide m/z. In particular, if the library used does no have PTM marks in the form "UniMod:##", there is the option to run a shiny app to update them.
 - Update to FP_to_MQ: now if DiaNN quantitation was activated this (non-silently) by default outputs as main PSMs table the report from DiaNN, with the PSMs from FragPipe also output as another object. Note: THIS MAY CAUSE ISSUES FOR INTEGRATION IN THE MAIN WORKFLOWS => CHECK!!!
 - Renewed support for MaxQuant for the replicates script: it had been lost over recent updates.

Vers. 5.2.0.0
 - This version appears to be broken. EDIT: OK, this is fixed, ignore this version. Lesson learned: never save a non-function .R file (script) in the /R folder. Either tha, or if you do do not keep the file open in RStudio? Roxygen2 doesn't like that, at all!!!

Vers. 5.1.0.2
 - Slight improvements to stability as well as to speed.
 - GO term of interest columns added to PG table in report.

Vers. 5.1.0.1
 - Fixed wrong labels bug in sample heatmaps (reps script).
 - Fixed a few recently introduced issues with reps script.

Vers. 5.1.0.0
 - Finally found the time to introduce the new openxlsx2-based reports to the replicates script. Niklas' Excel macros are now completely deprecated and unused.
 - As part of the above, 3 new source scripts have been created to reduce code duplication between both main scripts.
 - Added support for arbitrary value LFC thresholds for Volcano plots.
 - Improved several large dot plots but replacing geom_point with geom_scattermore
 - Updated + parallelized the protein-of-interest heatmaps.
 - Moved "load search folder and PSMs" and "finalize and deliver analysis" code chunks to shared sources in .../Sources.
 - Added gc() garbage collection call before saving backups.
 - Fixed a bug which was causing the automatically generated report object to cause the save image function to fail, if the former contained un-evaluated plots.
 - Fixed a small bug in the no-replicates script (at peptide table amino acid columns).

Vers. 5.0.1.4
 - Complete rewrite of ProtMatch2 - it is now sometimes a bit faster. Also a rare bug in the function - which caused some incorrect matches to be reported - has been corrected.
 - Prot.Ruler will now by default not try to access an external url of genome sizes from NCBI but will access a version re-distributed with the package. This will be much faster in most cases.

Vers. 5.0.1.3
 - Significant improvements to sourced Fractions Map and Experiment Map editor scripts.
 - Created dfMelt - which like listMelt provides faster melting - in this case for data.frames. Just like listMelt, it is utils::stack()-based and will only work in special cases (see function help). Thus, it cannot wholly substitute for classic melt functions. Only use if you know what you are doing!!!
 - Small rewrites to make 200% sure we do not have issues with duplicates of data.tables still being linked and so modifications of the duplicate also affecting the original. 
 - Fix to Coverage, which was broken.

Vers. 5.0.1.2
 - Moved the fasta databases processing code to sources as part of ongoing efforts to get rid of code duplication between both main scripts.
 - Short wrapper functions to create column-wise shiny inputs were moved to main package level (from being created in workflow). Again, this is to avoid code duplications. 

Vers. 5.0.1.0
 - Improved handling of fasta databases (automated detection of correct parameters).
 - Fixed a bug which caused some columns not to be written correctly for modified-peptides regulation analysis.
 - Also improved modified peptides re-normalisation: while it was greatly improved recently over previous versions, there was still the issue that imputation was applied at ratios (which are not normal!) level. This is fixed now. Concomitantly, the artifacts I was still seeing in the volcano plots seem gone.
 - Still for modified peptides, fixed a few more issues (incorrectly drawn heatmaps of co-regulated GO terms).
 - Started rolling out support for Pepper detectability correction. Currently this is available for the script without replicates only.

Vers. 5.0.0.8
 - The MS files map bit (replicates script) got moved to a sourced script, with a check popup at the end, and can be re-run in a loop as long as the user spots something wrong. Same concept as what is already done for the Experiment map.
 - In Prot.Quant, the reference ratios calculations script was closely modelled on the last version of the peptides ref ratios scripts - otherwise parts of the PTM ratios re-normalizations were not working.
 - Improved data.table::fread calls to deal with the integer64 class.
 - Fixed an issue with some contaminant proteins getting NA as accession when processing MaxQuant data.
 - A file which was normally downloaded from TAIR for A. thaliana datasets is now included in the package. This means that the file freezes TAIR's current version, but this is better than a broken link.
 - MSMS counts/IDs for MQ input data rewritten using listMelt to be much faster.

Vers. 5.0.0.7
 - Parallelisation has been improved again - in particular, I am now trying to avoid using clusterCall to load package librars, as this is extremely slow within functions.

Vers. 5.0.0.6
 - Added new cleanup question at the end of the workflows (to keep temporary folders clean).
 - New peptides-level profile/sorted plots in no-replicates workflow.

Vers. 5.0.0.5
 - Bug fix on GO_enrich. It is working again. In addition, the function's parallelisation has been much improved.
 - Finished (I hope) fixing the clone invoice cleanup script.
 - Parallelized the very slow pRoloc part.
 - There is now the option to cleanup the temporary folder when the analysis completes. This should slow down space-creep.

Vers. 5.0.0.4
 - Parallelized Format.DB and Format.DB_txt.
 - Improved the clone invoice cleanup script.
 - Added a new script (more of a template) in utils to write SDRF files for PRIDE submissions.
 - FP_to_MQ: improved 2-character single mark generation and added warning for the very rare cases where a single mark per mod is not created.
 - GO_enrich is broken in this version!

Vers. 5.0.0.3
 - Maybe this time Prot.Quant is actually parallelized (in previous versions the nls.lm step wasn't for some reason)? Everything can happen... but it looks better now.
 - I also fixed a small bug which caused the function to fail when two partially overlapping parameters were set simultaneously (one to work from the unique peptides column, the other to prioritize unique peptides).
 - Improved stat tests (better support for one-sided t- and F-tests, new shiny app to decide again which test to use once they have actually been run...)
 - Also added new parameters to decide within which grouping level (ratio groups/experiment/whole dataset) to create reference ratios.
 - New shiny app-based parameters editing in the no-replicates script.
 - Fixed a small issue in FP_to_MQ where "Variable" was spelled in lower case only (expected with capital by the workflows). Also improved its parallelization.
 - Optimized and parallelized GO_map to make it a bit faster. Also the very slow topGO-based step to get offspring terms was rewritten to take only a couple of seconds, using toTable combined with data.table-based aggregation.
 - Added failsafe argument in FP_to_MQ to detect cases where FP was run without IonQuant turned on, allowing for early failure.
 - For the record, there are probably some issues to fix in how FP_to_MQ handles Open Searches. For now, I added an argument to ignore by default Open Search results, unless the user explicitly requests them to be included.

Vers. 5.0.0.2
 - Decreased reliance on R's innate plotting abilities: some of the last heatmaps using heatmap.2 were switched to an in-house, ggplot2-based function. All that remains are some pRoloc-based plots.
 - Fixed an issue with sample labels being inverted in the heatmap (script with replicates).
 - There will be less printing to a browser window of random plotly plots (profile plots, heatmaps, dimensionality reduction plots), instead those are grouped into a single shiny app.

Vers. 5.0.0.1
 - For the no-replicates script, the Excel reports are now written entirely using openxlsx2 rather than openxlsx, which allows doing completely without Excel macros. (A similar single Excel report, based on the same code, is in the works for the replicates script).
 - Improvements to parameters, Venn diagrams and density/correlation plots in no-replicates script.
 - Further cleanup, parallelisation...
 - Now reloading a Backup.RData file using load_Bckp() should also automatically if and as relevant re-create a cluster with the required number of nodes.
 - It seems that the normalisation issues with analysis of PTM-modified peptides were not fixed completely yet in previous versions of the replicates script. Should be fixed now, hopefully...
 - Fixed a bug in how average references were calculated for the purpose of calculating peptide-level ratios (non-nested design only; the input intensities were assumed to be log-transformed, they are not). I do not think that this has any implications since the workflow hardly ever uses ratios - and recalculates them for instance at protein level. It could have been a problem for future implementations of SILAC support (since in SILAC ratios are measured very precisely and could be used to re-calculate intensities).

Vers. 5.0.0.0
 - Small but significant change: to improve the speed at which large PSM files are loaded, I have switched from read.delim to data.table::fread. However, this has a non-null, though (probably) negligible cost: for some reason as yet unexplained (the devs know about it), a small proporion of numbers are read by fread as slightly different values than the value given by read.delim. The difference in on the 10^-16 scale at most, so negligible for most purposes (including normally our data analyses, which deal with a different scale of data and much higher differences). Still, it is important to make a note of it in case something goes awry in future - minute differences in number encoding have on one occasion caused many American fatalities in the 1st Gulf War...
 - MS2-level refinement of peptide MS1-based relative intensities over samples has been rewritten. It is now applied at PSMs leel and can handle the results of different searches (it broke previously). The way the calculation is applied to the MS1 has been weighted by the -log10(PEP), so it has a stronger influence for "good peptides". Up to now, it does not appear to have a strong effect on the final results, bu we will investigate.

Vers. 4.5.0.1
 - Improved parallelization. 

Vers. 4.5.0.0
 - More performance improvements, including more systematic parallelisation, more frequent usage of data.tables and switching to different save/load functions.
 - Parallelized GO_enrich.
 - Fixed issues with drop-down protein selection in parameters being ignored if proteins were selected then de-selected.
 - Fixed bugs in the modified-peptides analysis workflow.
 - Parallelized DIANN_to_MQ - and unlike older parallel functions it can accept a pre-made cluster. Now the workflows must be updated to provide a cluster to it for additional speed gains. Ultimately this model will be ported to all parallel functions.

Vers. 4.3.1.2
 - Finally realised I had to add @import data.table and add it to the DESCRIPTION as well...
 - Added support for multiple fractions and/or phospho- and other PTM-enriched samples to the no-replicates script.

Vers. 4.3.1.1
 - Increasing version by 1 because somehow otherwise it seems some functions do not update.

Vers. 4.3.1.0
 - Started rolling out major rewrites for speed - using data.tables for faster aggregation and the new utils::stack-based listMelt function to replace reshape2::melt (which is not compatible with data.tables and getting deprecated).

Vers. 4.3.0.4
 - Small edits to workflows.
 - Bug fix which corrects an issue introduced in 4.1.3.1 with matching of I/L containing peptides, which resulted in underestimated coverage when using function Coverage.
 - Added small function to reload a backup without forgetting to load packages or set working directory.

Vers. 4.3.0.3
 - Minor bug fixes.

Vers. 4.3.0.1
 - Further improvements to speed in the replicates workflow and in Prot.Quant.

Vers. 4.3.0.0
 - Major rewrite of the main parallelized functions, PG_assemble and Prot.Quant, which were clearly poorly parallelised up to now. This should afford very significant gains in spead.

Vers. 4.2.0.0
 - Significant change to how ref ratios are computed now: the inner variabiliy of all sample groups within the ratios group is taken into account, not just that of the references.
 - Fix ProtMatch 2 (I and L should be identical). Improved correction of file paths for DiaNN folder when it has been moved to a new location.

Vers. 4.1.3.2
 - Reworked the clone results section - should be much more efficient and simpler now.

Vers. 4.1.3.1
 - Fixed peptide-to-protein matches in ProtMatch and Coverage to allow Leucine-Isoleucine matches.
 - New single report created for no replicates script (same for replicates script is still pending).
 - Slight update to GO terms function to apply global scales by default.
 - Minor bug fix to chromatogram plots for Thermo raw files in MQ.summary.

Vers. 4.1.3.0
 - Major rewrite of the (now single) Excel report for no-replicates analyses. Will get ported to the replicates situation if successful.
 - I detected a bug in FP_2_MQ which causes it to fail in some situations - when it cannot process properly modifications. It is still working in most cases. I will work on a fix but it isn't done yet.

Vers. 4.1.2.2
 - Updates to Shiny apps.
 - Updates to Volcano plot (incl. from F.test function) labels for modified peptides with better labels.
 - Fixed some issues with tables.
 - Custom assignment operators are now not explicitly created by the scripts, instead directly loaded with the package.

Vers. 4.1.2.1
 - Updates to shiny apps to include checkboxes (for now replicates script only), because checkboxes are great. Also, the Experiment map is now much less laggy.
 - Minor update to Format.DB to better process fastas from NCBI.
 - Added 3 new shiny apps to script with replicates: one for defining how to process fasta databases, one for deciding on which outliers to remove, one on whether to accept or reject ComBat normalization results.
 - Created plotly interactive heatmap for script with replicates.
 - Script with replicate: shiny app for F-tests updated to also include t-tests. Now it is here, not in Experiment map, that reference levels are defined.
 - Added (or re-added? I may have overwritten it previously) the new assignment operators to non-replicates script.

Vers. 4.1.2.0
 - Updated MatMet_LCMS for support of Bruker d files; also improved the Thermo part.
 - Changed default background colour in Coverage to "lightgrey".
 - Fixes to some issues linked with the new %<<% and %<c% custom assignment operators.

Vers. 4.1.1.3
 - Update to MatMet_LCMS to provide support for Bruker .d files.

Vers. 4.1.1.2
 - Polished MQ.Summary's figures.
 - Improved figures from the no-replicates script.
 - FP_to_MQ: added support for parsing modifications tables where several target amino acids have been separated with "," or " " instead of standard "".

Vers. 4.1.1.0
 - Finished the new ProtMatch2 function, which now replaces ProtMatch (kept for the moment for backwards compatibility) and is radically rewritten to be ~50x faster. This has already been implemented in the analysis scripts and means now checking peptide-to-protein matches should be systematic, as the time cost is now negligible.
 - MatMet_LCMS is currently WIP as I attempt to introduce support for Bruker .d files. This should not break the function fully or the scripts (because it is run within a try(...) call).

Vers. 4.1.0.4
 - Created a work-in-progress ProtMatch2 function which should make checking protein-to-peptide matches faster.

Vers. 4.1.0.3
 - Fixed a few small bugs in the replicates script (issue with adding levels to some factors in the shiny app).
 - Addition of a WIP script to run DiaNN on the HPC.

Vers. 4.1.0.2
 - Updates to cloning/invoicing/archiving script.
 - Updated to report tables to allow column groupings (still seems a bit buggy).
 - Reverted the changes of previous version for Digest as it is clearly not there yet (slightly buggy + actually slower!)

Vers. 4.1.0.0
 - Complete re-write of Digest, using almost exclusively regular expression. It ought to be much faster now.

Vers. 4.0.0.21
 - Small update to MQ.Summary (minor bug fixe + upgraded colours).
 - Update to MQ.Summary (minor bug fix, upgraded colour schemes).
 - Updated the color scales in the replicates script.

Vers. 4.0.0.20
 - Rewritten Format.DB_txt to be ~10* faster.
 - Updates to analysis scripts.

Vers. 4.0.0.19
 - Updates to the analysis scripts.

Vers. 4.0.0.18
 - Major update to replicates script to allow shiny-based interactive building of parameters.
 - Bug fix to modified peptides ratios re-normalisation.

Vers. 4.0.0.17
 - Update to no replicates script to allow analysis of FragPipe output data. Now also clear demarcation between input and output directories.
 - Minor update to MQ.summary.
 - Tiny update to LCMS_WetLab.

Vers. 4.0.0.16
 - New GO plots density graph for no-replicates script.

Vers. 4.0.0.15
 - Fixed a small bug in the no-replicates script affecting GO terms sorted PGs and profile plots.
 - Added a new option for GO_enrich, to allow replacing missing logFCs values with lower estimates. This is only used by no-replicates script for now.

Vers. 4.0.0.14
 - Update to analysis scripts, main change: the no-replicates script now also writes its own materials and methods.

Vers. 4.0.0.13
 - Small updates to scripts, FP_to_MQ...

Vers. 4.0.0.12
 - Small bug fixes/improvements to no-replicates workflow.

Vers. 4.0.0.11
 - Updates for better support for FragPipe.
 - Minor bug fix to Digest.

Vers. 4.0.0.10
 - Updated analysis scripts for better FragPipe support.
 - Updates to package folder structure and installation scripts.
 - Updates to MatMet_LCMS for support of Vanquish NEO and of more injection modes.

Vers. 4.0.0.9
 - Minor fix to GO_map.
 - Updated analysis scripts.

Vers. 4.0.0.5
 - Bug fixes to FP_to_MQ to cover more use cases.

Vers. 4.0.0.4
 - New function, Pepper_TrainingData, to create from evidence data.frames a training dataset suitable for Pepper.

Vers. 4.0.0.3
 - Small update to Format.DB_txt.
 - Updates to analysis scripts.

Vers. 4.0.0.2
 - Resurrected an old function, Annotate_DB, eventhough it is not really used ever. But still in the code, somehow.;Added support for SCV-based of observed peptides super-imposed over protein 3D structures.
 - Minor bug fixes to Volcano.plot.

Vers. 4.0.0.1
 - Small upgrade to Format.DB_txt to parse PDB, TAIR, FlyBase and WormBase accessions.

Vers. 4.0.0.0
 - Minor bug fixed in GO_map.

Vers. 3.1.0.0
 - Includes for the first time FP_to_MQ, a tentative function to convert FragPipe folder output to a MaxQuant-like evidence table. This has been tested on open and closed search data, label-free DDA or DIA and TMT-labelled. Still, it will probably need testing for a while and at this stage is unlikely to be compatible with all combinations of FragPipe parameters.
 - Small fix to Coverage to correct for a bug during path name checks which sometimes meant it would not save plots.

Vers. 3.0.0.13
 - Now including lots of scripts, including the main data analysis scripts. These are extracted into .../data/R scripts

Vers. 3.0.0.12
 - Minor graphical update to Coverage.

Vers. 3.0.0.11
 - Small update to Param.load to check file paths.
 - Update to Coverage to allow for an arbitrary value to the upper end of the intensity scale.

Vers. 3.0.0.10
 - Small changes to allow writing PTM-specific peptidoform tables from the no-replicates script.

Vers. 3.0.0.9
 - Small update to GO_enrich.
 - Minor changes to Format.DB_txt for efficiency.

Vers. 3.0.0.8
 - Updated Digest to implement the predicted rules for N-terminal methionine loss.

Vers. 3.0.0.7
 - Small updates to GO_enrich and Volcano.plot to remove partial_bundle calls, which caused more trouble than they helped.

Vers. 3.0.0.6
 - Minor updates for increased reliability on weaker PCs.
 - MQ.summary updated for cases where rwarr is not installed/compatible with system.
 - Updated Prot.Ruler, which was breaking when occasionally failing to access an online database of genome lengths.

Vers. 3.0.0.5
 - Small update for stability on weak machines to Prot.Quant.

Vers. 3.0.0.4
 - Minor update to grsep2 for speed. I need at some point to merge it with grsep and use for each case the best algorithm.
 - Small edit to Format.DB to deal with terminal "*" in protein sequences.
 - Created function writeFasta as a reciprocal of Format.DB.
 - Small update to MQ.Summary and MatMet_LCMS to add support for other types of MS file extensions than raw (i.e., to ignore them instead of crashing the function).
 - Small fix to topattern to support backslash pattern replacement.
 - Small update to Param.load to deal correctly with logical parameters.

Vers. 3.0.0.2
 - Updated package number to address bug during compilation (diff.log function not added properly).
   In the end, this was a strange edge case where a function in the package is mistaken for an S3 method.
   The solution was described here: https://stackoverflow.com/questions/24594507/exporting-non-s3-methods-with-dots-in-the-name-using-roxygen2-v4/24607763#24607763
   (replace @export line with @export FUNCTIONNAME to explicitly export it as a function).
 - Small update to GO_enrich to remove data points for which Count < MinCount from the graphs.

Vers. 3.0.0.1
 - Update to MatMet_LCMS to cover DIA methods (still only for Q-Exactive family though).

Vers. 3.0.0.0
 - Some cleaning up on nomenclature for F_test and Volcano.plots.
 - Minor fix to MQ.Summary.
 - Created a new function, MatMet_WetLab, to guide writing a materials and methods template text.
 - Created a new function, MatMet_LCMS, to write LCMS method(s) from the raw files.
 - Created a new function, chooseFrom, for easier selection from a vector of options.
 - Removed 2 long obsolete functions, Annotate_DB and Annotate_PG.
 - Some improvements to DIANN_to_MQ.

Vers. 2.1.0.2
 - Minor fix on ggsave calls which, when saving a pdf, were rasterising it because raster-like arguments were being provided in the call.

Vers. 2.1.0.1
 - Minor bug fix in GO_enrich.

Vers. 2.1.0.0
 - Added a new function, DIANN_to_MQ to convert a DIA-NN PSMs table to a MaxQuant-like pseudo-evidence.txt table.

Vers. 2.0.1.17
 - Small update to AdvNorm.IL
 - Added option for parsing known PTM sites to Format.DB_text.
 - Small fixes to Volcano.plot to increase flexibility.
 - Fixed a bug in recent Prot.Quant versions which was causing it to overestimate ref-to-ref ratios.
 - Created a new function to calculate a protein's chemical formula from its amino acids sequence.

Vers. 2.0.1.16
 - Changes to Prot.Quant to allow using in priority up to N unique peptides before including razor or shared peptides.

Vers. 2.0.1.15
 - Added a new, faster and possibly better Prot.Quant2 function.
 - Small bug fix on Prot.Quant to allow for NA (instead of no change, logFC = 0) where there are all missing values for one sample.

Vers. 2.0.1.14
 - Small change to Coverage to plot modification marks, not a symbol (as there are not enough symbols in ggplot2 to cover all the PTMs we could want to print).

Vers. 2.0.1.13
 - Small update to columns created by GO_enrich.

Vers. 2.0.1.12
 - Update cor_mod_seq for cases where no modified peptides were identified/searched for.
 - Updated F_test to be able to deal with a pull down's target protein.

Vers. 2.0.1.11
 - Added support for specific references for each filter level in GO_enrich. Also redid counts/ID/logFC columns to ensure better internal consistency. (By this stage GO_enrich2 should be considered deprecated.)

Vers. 2.0.1.10
 - Some small changes to how names work for volcano plots and Go enrichment plots.

Vers. 2.0.1.9
 - Improved (for good I hope) the Protein/Gene counts in GO_enrich.

Vers. 2.0.1.8
 - Small update to GO_enrich so it also creates "Genes" columns now. GO_enrich (protein centric) is now (again) the default GO enrichment analysis function.
 - Small bug fix on the plotly version of proteins-of-interest only volcano plots.

Vers. 2.0.1.7
 - Updated GO_enrich so that it is now the same as GO_enrich2, but dealing at protein level, not genes. Note: these two should at the next stage be conflated altogether.

Vers. 2.0.1.6
 - Fixed a bug in how per-sample Gene columns were created by GO_enrich2, resulting in incorrect gene names in the column.
 - Minor updates to Coverage, Prot.Quant and DefArg.

Vers. 2.0.1.5
 - Updated Prot.Quant to allow specifying which modifications to exlude (up to now it was only which ones to include). Also created an option so not just unmodified counterparts to identified peptides could be excluded, but any peptide which could bear the modification on paper. For peptide-terminal peptides, this will be done on a protein group-specific basis (using sequence of the 1st protein in the group), so a peptide may be excluded for some but not all groups.

Vers. 2.0.1.4
 - Fixed a bug in the counts columns of GO_enrich2, which was causing the counts written in all columns to be those from the parent dataset/database only.
 - The function also now allows for counts which take into account proteins annotated with Offspring terms.
 - Extended support for removing "Potential contaminants" from Volcano.plot and F_test.
 - Fixed a small bug in FDR - if only one FDR value was provided the significance values became a vector, not a data frame. This is the usual issue that when only one column of a data frame is selected (fix: add drop = FALSE).
 - Fixes to Volcano.plot and F_test to deal with cases where there is only one FDR value to consider. (R's inconsistent behavior when subsetting/converting into data frames feels so stupid sometimes!)
 - In Volcano.plots, reverted the Symmetrical argument to being the same length as the number of volcano plots to draw.

Vers. 2.0.1.3
 - Small change to Volcano.plot to allow excluding contaminants.
 - Small change to GO.enrich to draw bar plots for all terms, not just significant ones, but with significance thresholds drawn.
 - Improved labels on the plotly plots generated by Volcano.plot.
 - Note that there is a bug in the last part of GO_enrich2 (where the GO graph is created) which I cannot currently fix: it will rarely fail to create a GO terms graph, but then will create an empty file which it fails to delete or release. Because I have no control over the 
 - Fixed - I hope now for good!!! - the part calculating ref-to-ref ratios in Prot.Quant.
 - Added support in F_test for mirroring contrats so that the denominator is on the right (tested only on single, not double, contrasts). For t-test based volcano plots this is done higher up, in the main analysis script.

Vers. 2.0.1.2
 - Small bug fix to GO_enrich2

Vers. 2.0.1.0
 - Significant update to GO enrichment functions: GO_enrich_DAVID was retired because no way was found to make it work following RDAVIDWebService going deprecated on Bioconductor. Instead, a new function called GO_enrich2, using topGO, was created.

Vers. 2.0.0.3
 - Several small updates on the GO_enrich and GO_enrich_DAVID functions. The most noteworthy one is WIP support for the Python Web Service for DAVID.
 - Small fix to Prot.Quant.
 - Minor changes to the way Volcano.plot and F_test handle the question of plot symmetry.

Vers. 2.0.0.1
 - Small update to Digest and ProtMatch to increase efficiency.
 - Reverted F_test and scripts to using Data_Impute2 - removed Data_Impute3 - it actually wasn't necessary. Data_Impute2 itself was changed to use by default knn for MNAR and LCMD for MAR. Now is a wrapper for the imputeLCMD package. Also deals better with MAR imputation within groups of related samples.
 - Updated AdvNorm.IL.R to better deal with missing values when calculating median.
 - Minor update to DefArg to better parse function code.
 - Fixed a rare bug in computing the number of peptides (razor/unique/all) for protein groups in PG_assemble: comparing integers to numerics resulted in a small discrepancy in numbers calculated from otherwise identical looking input.
 - Small updates to GO_enrich and GO_enrich_DAVID functions to allow setting a hard minimum/maximum to the number of labels plotted.

Vers. 2.0.0.0
 - Created a WIP new wrapper function for imputation, Data_Impute3. Changed F_test to use it.
 - Updated PG_assemble to better resolve razor peptides for custom protein groups and better deal with contaminants.

Vers. 1.7.1.18
 - Rewriting of Prot.Ruler for increased clarity + dealing with protein groups with hybrid taxonomy. Now each organism gets its own columns (which makes more sense anyway).
 - Small update to Prot.Quant to allow it to calculate expression values only (no ratios). Also corrects issue with one sample, where the vector would be returned rotated 90°.
 - Fixed a minor issue with grsep2.
 - Fixed a minor issue with F_test.

Vers. 1.7.1.17
 - Solved a minor issue recently introduced in Prot.Quant which would cause Ref-to-Ref ratios not to be created.
 - Updated AdvNorm.IL to be slightly clearer and correct for small shifts in overall data level because the first column does not shift during the alignment.

Vers. 1.7.1.16
 - Major update to the Digest function to make it faster (a bit, using parallelisation), cover some edge cases it was missing previously, and more flexible (up to now it assumed C-terminal cleavage relative to the amino acid, now the way the Cut argument is specified has changed to allow for N-terminal cleavage as well). Also included changes to ProtMatch to accommodate the changes to the input expected by Digest.

Vers. 1.7.1.15
 - Fixed a small error in Prot.Quant which would cause it to fail when calculating ref-to-ref ratios.

Vers. 1.7.1.14
 - Fixed a bug in PG_assemble where parSapply's argument, when a list, wasn't explicitly unlisted - this is done automatically for sapply, not, apparently, for parSapply!

Vers. 1.7.1.13
 - Fixed a rare edge case in the DefArg function, which resulted in failure to parse default arguments when arg is a regex pattern.
 - Slightly improved processing of FASTAs by Format.DB.

Vers. 1.7.1.10
 - Corrected an error in Prot.Quant which could result in a value being returned where the protein is absent.
 - Niklas updated his excel macros to allow for multi-row headers in the proteinGroups.xlsx file.

Vers. 1.7.1.9
 - Updated the PG_assemble function so it can tag potential contaminant proteins as such. Also added the option to tag protein groups with more than N peptides as to "keep".
 - Changed Prot.Quant to make generation of ref-to-ref ratios conditional to the presence of more than one reference sample.

Vers. 1.7.1.8
 - Added a new improved grsep called grsep2 which does not rely on regex for its underlying code.
 - Removed borders from dots in Volcano.plot.

Vers. 1.7.1.7
 - Added arguments to Volcano.plot to limit the number of plotted labels to a maximum. 
 - Made MQ.Summary more robust to various inputs.

Vers. 1.7.1.6
 - And again...

Vers. 1.7.1.5
 - And trying again!

Vers. 1.7.1.4
 - Again, after manually deleting the local library...

Vers. 1.7.1.3
 - And again...

Vers. 1.7.1.2
 - Again...

Vers. 1.7.1.1
 - Trying again...

Vers. 1.7.1.0
 - Trying to eliminate a function corruption issue by re-compiling.

Vers. 1.7.0.3
 - Fixed a small bug during PEP calculations in PG_assemble

Vers. 1.7.0.2
 - Fixed a small mistake in F_test.
 - Fixed small issues with PG_assemble.

Vers. 1.7.0.1
 - Made the previously desperately slow function "Format.DB_txt.R" much, much faster. Also, in the proces the new code corrects a few bugs which caused some annotations to be missed in rare cases.

Vers. 1.7.0.0
 - Significant simplification of old code in Prot.Quant which should make the function faster, clearer (i.e. less bug prone) and most crucially should yield more complete quantitative data.

Vers. 1.6.0.5
 - Fixed an issue with PG_assemble to determine razor protein group(s) better (and slightly faster). This step also now supports priorities for custom protein groups.
 - In the same function, also fixed an issue which confused razor and unique peptides and caused occasional crashes when calculating coverage.
 - Fixed a small issue in MQ.summary which prevented identified MS2 spectra from being correctly plotted.
 - Fixed a few small issues in GO_enrich_DAVID which would cause it to crash when there were no terms for a specific category or no valid values for a filter.

Vers. 1.6.0.4
 - Updated the PG_assemble function to fix a few issues in how it deals with custom protein groups.
 - Improved raw files sorting in MQ.summary.
 - Fixed a bug in Coverage which caused the function to crash for some proteins with very few peptide matches.
 - Fixed an issue in the barplots created by GO_enrich and GO_enrich_DAVID which would result in the terms with the most extreme Z-score values being filled with grey.

Vers. 1.6.0.2
 - Changed the way MQ.summary deals with directories to reduce the chance of errors when saving (the latter which would potentially result in a change of work directory).

Vers. 1.6.0.1
 - Fixed an issue in Prot.Quant created in the last update and affecting ref-to-ref ratios for un-paired replicate experiments only.

